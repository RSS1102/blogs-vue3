{"remainingRequest":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\A1064\\Desktop\\webs\\web\\src\\components\\login\\Register.vue?vue&type=style&index=0&id=0710bf8e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\src\\components\\login\\Register.vue","mtime":1631493408932},{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\A1064\\Desktop\\webs\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyrmlbTkuKrlhoXlrrlzdHlsZSovDQoucGFnZV9jbGFzc3sNCiAgbWFyZ2luLXRvcDogMTUwcHg7DQp9DQouYm94X2NsYXNzew0KICBwb3NpdGlvbjpyZWxhdGl2ZTsNCiAgbWFyZ2luOiAwIGF1dG87DQogIHdpZHRoOiA1MDBweDsNCiAgaGVpZ2h0OiA1MDBweDsNCiAgYmFja2dyb3VuZDogICNjOGU1YzI7DQoNCg0KfQ0KLyrooajlpLTnmoRzdHlsZSovDQoudGl0bGVfY2xhc3N7DQogIC8q5rC05bmz5bGF5LitKi8NCiAgZGlzcGxheTp0YWJsZTsNCiAgbWFyZ2luOiAwIGF1dG87DQoNCn0NCi8q57uE5Lu255qEc3R5bGUqLw0KI1JlZ2lzdGVyew0KICBtYXJnaW4tbGVmdDogMjVweDsNCiAgbWFyZ2luLXRvcDogMjVweDsNCn0NCi5lbC1mb3Jtew0KDQp9DQouZWwtaW5wdXR7DQogIHdpZHRoOiAyMjBweDsNCn0NCg0K"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\r\n  <div class=\"page_class\">\r\n    <div class=\"box_class\">\r\n    <div class=\"title_class\">\r\n  <h2>账号注册 </h2>\r\n    </div>\r\n  <div class=\"Form_class\">\r\n  <el-form ref=\"reAccount\" :model=\"reAccount\" label-width=\"90px\"  id=\"Register\" :rules=\"rules\">\r\n    <el-form-item label=\"用户名：\" prop=\"username\">\r\n      <el-input v-model=\"reAccount.username\" ></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"邮箱：\" prop=\"userEmail\">\r\n      <el-input v-model=\"reAccount.userEmail\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码：\" prop=\"userPwd\">\r\n      <el-input v-model=\"reAccount.userPwd\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码:\" prop=\"userPwds\">\r\n      <el-input v-model=\"reAccount.userPwds\"></el-input>\r\n    </el-form-item>\r\n<!--验证码-->\r\n    <el-form-item label=\"验证码\" class=\"my-item\" prop=\"code\" >\r\n      <!--trim函数移除字符串两侧的空白字符或其他预定义字符。功能除去字符串开头和末尾的空格或其他字符;placeholder输入框占位文本-->\r\n      <el-input\r\n          v-model.trim=\"reAccount.code\"\r\n          placeholder=\"请输入验证码\"\r\n          size=\"small\"\r\n          style=\"width: 120px \"\r\n      ></el-input>\r\n\r\n      <!-- 生成验证码-->\r\n      <span class=\"login-code\" style=\"position: absolute; right: 0; top: 4px; left: 155px\" @click=\"btn_code\" >\r\n            <Sidentify :identifyCode=\"identifyCode\"></Sidentify>\r\n            </span>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-button type=\"primary\"@click=\"submitForm('reAccount')\" >注册</el-button>\r\n      <el-button @click=\"submitFormCancel\" style=\"margin-left: 66px\">取消</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidentify from \"@/components/repeat/Sidentify\";\r\nexport default {\r\n  name: \"Register\",\r\n  components: {Sidentify},\r\n\r\n  data() {\r\n    const repassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.reAccount.userPwd) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const reEmail = (rule, value, callback) => {\r\n      if (/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{3,6})$/.test(value) || !value) {\r\n        callback()\r\n      } else {\r\n        callback(new Error('请输入正确邮箱'))\r\n      }\r\n\r\n    };\r\n\r\n\r\n\r\n    return {\r\n      reAccount: {\r\n        username:'',\r\n        userEmail:'',\r\n        userPwd:'',\r\n      },\r\n      userPwds:'',\r\n      code:'',\r\n      //随机码\r\n      identifyCodes: \"1234567890abcdefjhijklinopqrsduvwxyz\",\r\n      //随机码\r\n      identifyCode: \"\",\r\n      picList: [],\r\n      props: {label: \"name\", value: \"id\", children: \"children\"},\r\n      rules: {\r\n        username: [\r\n            {required: true, message: \"请输入姓名\", trigger: 'blur'},\r\n          {min: 4, max: 12, message: \"请输入4-8个字符\", trigger: \"change\"},\r\n          {pattern: /^[\\u4e00-\\u9fa5_a-zA-Z0-9.·-]+$/, message: '姓名不支持特殊字符', trigger: 'blur'}\r\n        ],\r\n        userEmail: [\r\n            {required: true, message: \"请输入邮箱\", trigger: \"change\"},\r\n          { validator:reEmail, trigger: 'blur'}\r\n        ],\r\n        userPwd: [\r\n            { required: true, min: 6, max: 12, message: \"密码长度应该在6-12\", trigger: \"change\"}\r\n\r\n        ],\r\n        userPwds: [\r\n            {required: true, message: \"请输入密码\", trigger: \"change\"},\r\n          { validator:repassword,trigger: 'blur' },\r\n\r\n        ],\r\n        code: [{required: true, message: \"请输入验证码\", trigger: \"change\"}],\r\n      },\r\n      formList: [],\r\n    };\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    // 初始化验证码\r\n    this.identifyCode = \"\";\r\n    this.makeCode(this.identifyCodes, 4);\r\n    localStorage.setItem(\"code\", this.code);\r\n  },\r\n  methods: {\r\n    //点击刷新验证码\r\n    btn_code() {\r\n      console.log(\"2\")\r\n      this.refreshCode()\r\n    },\r\n    // openHtml() {\r\n    //   this.visible = true;\r\n    // },\r\n    //刷新验证码\r\n    refreshCode() {\r\n      this.identifyCode = \"\";\r\n      this.makeCode(this.identifyCodes, 4);\r\n    },\r\n    //生成验证上的随机数，验证码中的数从identifyCodes中取，\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[\r\n            this.randomNum(0, this.identifyCodes.length)\r\n            ]\r\n      }\r\n    },\r\n    //生成随机数,这里是生成\r\n    //Math.random()方法返回大于等于0小于1的一个随机数\r\n    //随机数 = Math.floor(Math.random() * 可能的总数 + 第一个可能的值)\r\n    randomNum(min, max) {\r\n      let a= Math.floor(Math.random() * (max - min) + min);\r\n      return  a\r\n    },\r\n    //上传 储存注册\r\n    saveArticle(){\r\n      this.$http.post('',this.reAccount).then(res=>{\r\n        console.log(res.data);\r\n      })\r\n      console.log(this.reAccount);\r\n    },\r\n\r\n\r\n    // 提交表单\r\n    //validate验证，任一表单项被校验后触发\r\n    submitForm(Article) {\r\n      console.log('点击按钮')\r\n      this.$refs[Article].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!')\r\n          this.submit();\r\n        } else {\r\n          console.log('error submit!!')\r\n          this. refreshCode();\r\n          return false\r\n        }\r\n      })\r\n    },\r\n\r\n    submit: async function () {\r\n      console.log(\"判断方法\")\r\n      //toLowerCase转换小写\r\n      if (this.reAccount.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\r\n        console.log(\"验证码错误\")\r\n        //重新刷新验证码\r\n        this.refreshCode();\r\n        // this.loading = false;\r\n        return;\r\n      } else {\r\n        //验证码校验成功就可以调接口提交表单了\r\n        console.log('验证成功')\r\n        // this.saveArticle()\r\n      }\r\n    },\r\n    //取消注册返回上一页\r\n    submitFormCancel(){\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n/*整个内容style*/\r\n.page_class{\r\n  margin-top: 150px;\r\n}\r\n.box_class{\r\n  position:relative;\r\n  margin: 0 auto;\r\n  width: 500px;\r\n  height: 500px;\r\n  background:  #c8e5c2;\r\n\r\n\r\n}\r\n/*表头的style*/\r\n.title_class{\r\n  /*水平居中*/\r\n  display:table;\r\n  margin: 0 auto;\r\n\r\n}\r\n/*组件的style*/\r\n#Register{\r\n  margin-left: 25px;\r\n  margin-top: 25px;\r\n}\r\n.el-form{\r\n\r\n}\r\n.el-input{\r\n  width: 220px;\r\n}\r\n\r\n</style>"]}]}